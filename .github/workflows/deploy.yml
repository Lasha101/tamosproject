# .github/workflows/deploy.yml
name: CI/CD Pipeline for Lab App
# corrected script

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Build and Push Backend Image
        run: |
          docker build -f Dockerfile.backend -t registry.digitalocean.com/fortamosapp/lab-app-backend:${{ github.sha }} .
          docker push registry.digitalocean.com/fortamosapp/lab-app-backend:${{ github.sha }}

      - name: Build and Push Frontend Image
        run: |
          docker build -f frontend/Dockerfile --build-arg REACT_APP_API_URL=http://${{ secrets.SSH_HOST }}:8000 -t registry.digitalocean.com/fortamosapp/lab-app-frontend:${{ github.sha }} ./frontend
          docker push registry.digitalocean.com/fortamosapp/lab-app-frontend:${{ github.sha }}
          
       - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          envs: DOCR_TOKEN
          env:
            DOCR_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          script: |
            set -euo pipefail
            set -x

            USERNAME="$(whoami)"
            if [ "$USERNAME" = "root" ]; then
              APP_DIR="/root/applab"
            else
              # prefer /opt/applab (system-wide) or your home dir
              APP_DIR="/opt/applab"
              sudo mkdir -p "$APP_DIR"
              sudo chown -R "$USERNAME":"$USERNAME" "$APP_DIR"
            fi

            mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            # Ensure envsubst exists
            if ! command -v envsubst >/dev/null 2>&1; then
              sudo apt-get update -y
              sudo apt-get install -y gettext-base
            fi

            # Docker registry login (pull access)
            echo "$DOCR_TOKEN" | docker login -u doctl --password-stdin registry.digitalocean.com

            # Render compose file with current SHA tags
            export BACKEND_IMAGE_TAG=${{ github.sha }}
            export FRONTEND_IMAGE_TAG=${{ github.sha }}
            envsubst < docker-compose.template.yml > docker-compose.yml

            # Pull and restart
            docker compose pull
            docker compose up -d --remove-orphans